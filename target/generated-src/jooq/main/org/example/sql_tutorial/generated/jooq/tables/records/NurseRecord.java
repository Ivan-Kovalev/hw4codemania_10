/*
 * This file is generated by jOOQ.
 */
package org.example.sql_tutorial.generated.jooq.tables.records;


import java.time.OffsetDateTime;

import org.example.sql_tutorial.generated.jooq.tables.Nurse;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NurseRecord extends UpdatableRecordImpl<NurseRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.nurse.id</code>.
     */
    public NurseRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.nurse.doctor_id</code>.
     */
    public NurseRecord setDoctorId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.doctor_id</code>.
     */
    public Long getDoctorId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.nurse.name</code>.
     */
    public NurseRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.nurse.years_of_experience</code>.
     */
    public NurseRecord setYearsOfExperience(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.years_of_experience</code>.
     */
    public Long getYearsOfExperience() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.nurse.graduation_date</code>.
     */
    public NurseRecord setGraduationDate(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.graduation_date</code>.
     */
    public OffsetDateTime getGraduationDate() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.nurse.employment_date</code>.
     */
    public NurseRecord setEmploymentDate(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.nurse.employment_date</code>.
     */
    public OffsetDateTime getEmploymentDate() {
        return (OffsetDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NurseRecord
     */
    public NurseRecord() {
        super(Nurse.NURSE);
    }

    /**
     * Create a detached, initialised NurseRecord
     */
    public NurseRecord(Integer id, Long doctorId, String name, Long yearsOfExperience, OffsetDateTime graduationDate, OffsetDateTime employmentDate) {
        super(Nurse.NURSE);

        setId(id);
        setDoctorId(doctorId);
        setName(name);
        setYearsOfExperience(yearsOfExperience);
        setGraduationDate(graduationDate);
        setEmploymentDate(employmentDate);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised NurseRecord
     */
    public NurseRecord(org.example.sql_tutorial.generated.jooq.tables.pojos.Nurse value) {
        super(Nurse.NURSE);

        if (value != null) {
            setId(value.getId());
            setDoctorId(value.getDoctorId());
            setName(value.getName());
            setYearsOfExperience(value.getYearsOfExperience());
            setGraduationDate(value.getGraduationDate());
            setEmploymentDate(value.getEmploymentDate());
            resetTouchedOnNotNull();
        }
    }
}
