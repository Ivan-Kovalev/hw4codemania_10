/*
 * This file is generated by jOOQ.
 */
package org.example.sql_tutorial.generated.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Doctor implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long departmentId;
    private final String name;
    private final Long yearsOfExperience;
    private final String speciality;
    private final Boolean highestCategory;
    private final OffsetDateTime graduationDate;
    private final OffsetDateTime employmentDate;

    public Doctor(Doctor value) {
        this.id = value.id;
        this.departmentId = value.departmentId;
        this.name = value.name;
        this.yearsOfExperience = value.yearsOfExperience;
        this.speciality = value.speciality;
        this.highestCategory = value.highestCategory;
        this.graduationDate = value.graduationDate;
        this.employmentDate = value.employmentDate;
    }

    public Doctor(
        Integer id,
        Long departmentId,
        String name,
        Long yearsOfExperience,
        String speciality,
        Boolean highestCategory,
        OffsetDateTime graduationDate,
        OffsetDateTime employmentDate
    ) {
        this.id = id;
        this.departmentId = departmentId;
        this.name = name;
        this.yearsOfExperience = yearsOfExperience;
        this.speciality = speciality;
        this.highestCategory = highestCategory;
        this.graduationDate = graduationDate;
        this.employmentDate = employmentDate;
    }

    /**
     * Getter for <code>public.doctor.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.doctor.department_id</code>.
     */
    public Long getDepartmentId() {
        return this.departmentId;
    }

    /**
     * Getter for <code>public.doctor.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.doctor.years_of_experience</code>.
     */
    public Long getYearsOfExperience() {
        return this.yearsOfExperience;
    }

    /**
     * Getter for <code>public.doctor.speciality</code>.
     */
    public String getSpeciality() {
        return this.speciality;
    }

    /**
     * Getter for <code>public.doctor.highest_category</code>.
     */
    public Boolean getHighestCategory() {
        return this.highestCategory;
    }

    /**
     * Getter for <code>public.doctor.graduation_date</code>.
     */
    public OffsetDateTime getGraduationDate() {
        return this.graduationDate;
    }

    /**
     * Getter for <code>public.doctor.employment_date</code>.
     */
    public OffsetDateTime getEmploymentDate() {
        return this.employmentDate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Doctor other = (Doctor) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.departmentId == null) {
            if (other.departmentId != null)
                return false;
        }
        else if (!this.departmentId.equals(other.departmentId))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.yearsOfExperience == null) {
            if (other.yearsOfExperience != null)
                return false;
        }
        else if (!this.yearsOfExperience.equals(other.yearsOfExperience))
            return false;
        if (this.speciality == null) {
            if (other.speciality != null)
                return false;
        }
        else if (!this.speciality.equals(other.speciality))
            return false;
        if (this.highestCategory == null) {
            if (other.highestCategory != null)
                return false;
        }
        else if (!this.highestCategory.equals(other.highestCategory))
            return false;
        if (this.graduationDate == null) {
            if (other.graduationDate != null)
                return false;
        }
        else if (!this.graduationDate.equals(other.graduationDate))
            return false;
        if (this.employmentDate == null) {
            if (other.employmentDate != null)
                return false;
        }
        else if (!this.employmentDate.equals(other.employmentDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.departmentId == null) ? 0 : this.departmentId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.yearsOfExperience == null) ? 0 : this.yearsOfExperience.hashCode());
        result = prime * result + ((this.speciality == null) ? 0 : this.speciality.hashCode());
        result = prime * result + ((this.highestCategory == null) ? 0 : this.highestCategory.hashCode());
        result = prime * result + ((this.graduationDate == null) ? 0 : this.graduationDate.hashCode());
        result = prime * result + ((this.employmentDate == null) ? 0 : this.employmentDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Doctor (");

        sb.append(id);
        sb.append(", ").append(departmentId);
        sb.append(", ").append(name);
        sb.append(", ").append(yearsOfExperience);
        sb.append(", ").append(speciality);
        sb.append(", ").append(highestCategory);
        sb.append(", ").append(graduationDate);
        sb.append(", ").append(employmentDate);

        sb.append(")");
        return sb.toString();
    }
}
