/*
 * This file is generated by jOOQ.
 */
package org.example.sql_tutorial.generated.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Department implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer id;
    private final Long hospitalWards;
    private final Boolean isFull;
    private final Boolean quarantine;
    private final OffsetDateTime opening;

    public Department(Department value) {
        this.id = value.id;
        this.hospitalWards = value.hospitalWards;
        this.isFull = value.isFull;
        this.quarantine = value.quarantine;
        this.opening = value.opening;
    }

    public Department(
        Integer id,
        Long hospitalWards,
        Boolean isFull,
        Boolean quarantine,
        OffsetDateTime opening
    ) {
        this.id = id;
        this.hospitalWards = hospitalWards;
        this.isFull = isFull;
        this.quarantine = quarantine;
        this.opening = opening;
    }

    /**
     * Getter for <code>public.department.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.department.hospital_wards</code>.
     */
    public Long getHospitalWards() {
        return this.hospitalWards;
    }

    /**
     * Getter for <code>public.department.is_full</code>.
     */
    public Boolean getIsFull() {
        return this.isFull;
    }

    /**
     * Getter for <code>public.department.quarantine</code>.
     */
    public Boolean getQuarantine() {
        return this.quarantine;
    }

    /**
     * Getter for <code>public.department.opening</code>.
     */
    public OffsetDateTime getOpening() {
        return this.opening;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Department other = (Department) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.hospitalWards == null) {
            if (other.hospitalWards != null)
                return false;
        }
        else if (!this.hospitalWards.equals(other.hospitalWards))
            return false;
        if (this.isFull == null) {
            if (other.isFull != null)
                return false;
        }
        else if (!this.isFull.equals(other.isFull))
            return false;
        if (this.quarantine == null) {
            if (other.quarantine != null)
                return false;
        }
        else if (!this.quarantine.equals(other.quarantine))
            return false;
        if (this.opening == null) {
            if (other.opening != null)
                return false;
        }
        else if (!this.opening.equals(other.opening))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.hospitalWards == null) ? 0 : this.hospitalWards.hashCode());
        result = prime * result + ((this.isFull == null) ? 0 : this.isFull.hashCode());
        result = prime * result + ((this.quarantine == null) ? 0 : this.quarantine.hashCode());
        result = prime * result + ((this.opening == null) ? 0 : this.opening.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Department (");

        sb.append(id);
        sb.append(", ").append(hospitalWards);
        sb.append(", ").append(isFull);
        sb.append(", ").append(quarantine);
        sb.append(", ").append(opening);

        sb.append(")");
        return sb.toString();
    }
}
